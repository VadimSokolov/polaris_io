// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

namespace odb
{
  // table_field
  //

  inline
  bool access::composite_value_traits< ::polaris::io::table_field >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.table_null;
    r = r && i.field_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::polaris::io::table_field >::
  set_null (image_type& i, sqlite::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace sqlite;

    i.table_null = true;
    i.field_null = true;
  }

  // Quantity
  //

  inline
  access::object_traits< ::polaris::io::Quantity >::id_type
  access::object_traits< ::polaris::io::Quantity >::
  id (const object_type& o)
  {
    return o.tf;
  }

  inline
  void access::object_traits< ::polaris::io::Quantity >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits< ::polaris::io::Quantity >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Quantity >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Quantity >::
  load_ (statements_type&, object_type&)
  {
  }

  // Dimension
  //

  inline
  access::object_traits< ::polaris::io::Dimension >::id_type
  access::object_traits< ::polaris::io::Dimension >::
  id (const object_type& o)
  {
    return o.quantity;
  }

  inline
  void access::object_traits< ::polaris::io::Dimension >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits< ::polaris::io::Dimension >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Dimension >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Dimension >::
  load_ (statements_type&, object_type&)
  {
  }

  // Meta
  //

  inline
  access::object_traits< ::polaris::io::Meta >::id_type
  access::object_traits< ::polaris::io::Meta >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::polaris::io::Meta >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits< ::polaris::io::Meta >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Meta >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Meta >::
  load_ (statements_type&, object_type&)
  {
  }
}

