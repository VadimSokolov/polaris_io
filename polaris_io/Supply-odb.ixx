// This file was generated by ODB, object-relational mapping (ORM)
// compiler for C++.
//

namespace odb
{
  // MetaData
  //

  inline
  access::object_traits< ::polaris::io::MetaData >::id_type
  access::object_traits< ::polaris::io::MetaData >::
  id (const object_type& o)
  {
    return o.key;
  }

  inline
  void access::object_traits< ::polaris::io::MetaData >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::MetaData >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Node
  //

  inline
  access::object_traits< ::polaris::io::Node >::id_type
  access::object_traits< ::polaris::io::Node >::
  id (const object_type& o)
  {
    return o.node;
  }

  inline
  void access::object_traits< ::polaris::io::Node >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Node >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Zone
  //

  inline
  access::object_traits< ::polaris::io::Zone >::id_type
  access::object_traits< ::polaris::io::Zone >::
  id (const object_type& o)
  {
    return o.zone;
  }

  inline
  void access::object_traits< ::polaris::io::Zone >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Zone >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Shape
  //

  inline
  access::object_traits< ::polaris::io::Shape >::id_type
  access::object_traits< ::polaris::io::Shape >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Shape >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Shape >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Link
  //

  inline
  access::object_traits< ::polaris::io::Link >::id_type
  access::object_traits< ::polaris::io::Link >::
  id (const object_type& o)
  {
    return o.link;
  }

  inline
  void access::object_traits< ::polaris::io::Link >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Link >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Pocket
  //

  inline
  access::object_traits< ::polaris::io::Pocket >::id_type
  access::object_traits< ::polaris::io::Pocket >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Pocket >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Pocket >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Lane_Use
  //

  inline
  access::object_traits< ::polaris::io::Lane_Use >::id_type
  access::object_traits< ::polaris::io::Lane_Use >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Lane_Use >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Lane_Use >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Connect
  //

  inline
  access::object_traits< ::polaris::io::Connect >::id_type
  access::object_traits< ::polaris::io::Connect >::
  id (const object_type& o)
  {
    return o.conn;
  }

  inline
  void access::object_traits< ::polaris::io::Connect >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Connect >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Turn_Pen
  //

  inline
  access::object_traits< ::polaris::io::Turn_Pen >::id_type
  access::object_traits< ::polaris::io::Turn_Pen >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Turn_Pen >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Turn_Pen >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Parking
  //

  inline
  access::object_traits< ::polaris::io::Parking >::id_type
  access::object_traits< ::polaris::io::Parking >::
  id (const object_type& o)
  {
    return o.parking;
  }

  inline
  void access::object_traits< ::polaris::io::Parking >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Parking >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Location
  //

  inline
  access::object_traits< ::polaris::io::Location >::id_type
  access::object_traits< ::polaris::io::Location >::
  id (const object_type& o)
  {
    return o.location;
  }

  inline
  void access::object_traits< ::polaris::io::Location >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Location >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Access
  //

  inline
  access::object_traits< ::polaris::io::Access >::id_type
  access::object_traits< ::polaris::io::Access >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Access >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Access >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Sign
  //

  inline
  access::object_traits< ::polaris::io::Sign >::id_type
  access::object_traits< ::polaris::io::Sign >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Sign >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Sign >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Signal
  //

  inline
  access::object_traits< ::polaris::io::Signal >::id_type
  access::object_traits< ::polaris::io::Signal >::
  id (const object_type& o)
  {
    return o.signal;
  }

  inline
  void access::object_traits< ::polaris::io::Signal >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Signal >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Timing
  //

  inline
  access::object_traits< ::polaris::io::Timing >::id_type
  access::object_traits< ::polaris::io::Timing >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Timing >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Timing >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Phasing
  //

  inline
  access::object_traits< ::polaris::io::Phasing >::id_type
  access::object_traits< ::polaris::io::Phasing >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Phasing >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Phasing >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Detector
  //

  inline
  access::object_traits< ::polaris::io::Detector >::id_type
  access::object_traits< ::polaris::io::Detector >::
  id (const object_type& o)
  {
    return o.detector;
  }

  inline
  void access::object_traits< ::polaris::io::Detector >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Detector >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Stop
  //

  inline
  access::object_traits< ::polaris::io::Stop >::id_type
  access::object_traits< ::polaris::io::Stop >::
  id (const object_type& o)
  {
    return o.stop;
  }

  inline
  void access::object_traits< ::polaris::io::Stop >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Stop >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Fare
  //

  inline
  access::object_traits< ::polaris::io::Fare >::id_type
  access::object_traits< ::polaris::io::Fare >::
  id (const object_type& o)
  {
    return o.fare;
  }

  inline
  void access::object_traits< ::polaris::io::Fare >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Fare >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Line
  //

  inline
  access::object_traits< ::polaris::io::Line >::id_type
  access::object_traits< ::polaris::io::Line >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Line >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Line >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Schedule
  //

  inline
  access::object_traits< ::polaris::io::Schedule >::id_type
  access::object_traits< ::polaris::io::Schedule >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Schedule >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Schedule >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Driver
  //

  inline
  access::object_traits< ::polaris::io::Driver >::id_type
  access::object_traits< ::polaris::io::Driver >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Driver >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Driver >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Route_Nodes
  //

  inline
  access::object_traits< ::polaris::io::Route_Nodes >::id_type
  access::object_traits< ::polaris::io::Route_Nodes >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Route_Nodes >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Route_Nodes >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Veh_Type
  //

  inline
  access::object_traits< ::polaris::io::Veh_Type >::id_type
  access::object_traits< ::polaris::io::Veh_Type >::
  id (const object_type& o)
  {
    return o.type;
  }

  inline
  void access::object_traits< ::polaris::io::Veh_Type >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Veh_Type >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Ridership
  //

  inline
  access::object_traits< ::polaris::io::Ridership >::id_type
  access::object_traits< ::polaris::io::Ridership >::
  id (const object_type& o)
  {
    return o.auto_id;
  }

  inline
  void access::object_traits< ::polaris::io::Ridership >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Ridership >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Area_Type
  //

  inline
  access::object_traits< ::polaris::io::Area_Type >::id_type
  access::object_traits< ::polaris::io::Area_Type >::
  id (const object_type& o)
  {
    return o.area_type;
  }

  inline
  void access::object_traits< ::polaris::io::Area_Type >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Area_Type >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Link_Type
  //

  inline
  access::object_traits< ::polaris::io::Link_Type >::id_type
  access::object_traits< ::polaris::io::Link_Type >::
  id (const object_type& o)
  {
    return o.link_type;
  }

  inline
  void access::object_traits< ::polaris::io::Link_Type >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Link_Type >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Component
  //

  inline
  access::object_traits< ::polaris::io::Component >::id_type
  access::object_traits< ::polaris::io::Component >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::polaris::io::Component >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Component >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Component_Property_Keys
  //

  inline
  access::object_traits< ::polaris::io::Component_Property_Keys >::id_type
  access::object_traits< ::polaris::io::Component_Property_Keys >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::polaris::io::Component_Property_Keys >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Component_Property_Keys >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Instance
  //

  inline
  access::object_traits< ::polaris::io::Instance >::id_type
  access::object_traits< ::polaris::io::Instance >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::polaris::io::Instance >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Instance >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Instance_Property_Values
  //

  inline
  access::object_traits< ::polaris::io::Instance_Property_Values >::id_type
  access::object_traits< ::polaris::io::Instance_Property_Values >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::polaris::io::Instance_Property_Values >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Instance_Property_Values >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Action
  //

  inline
  access::object_traits< ::polaris::io::Action >::id_type
  access::object_traits< ::polaris::io::Action >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::polaris::io::Action >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Action >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  // Action_Keys
  //

  inline
  access::object_traits< ::polaris::io::Action_Keys >::id_type
  access::object_traits< ::polaris::io::Action_Keys >::
  id (const object_type& o)
  {
    return o.id;
  }

  inline
  void access::object_traits< ::polaris::io::Action_Keys >::
  callback (database& db, object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }

  inline
  void access::object_traits< ::polaris::io::Action_Keys >::
  callback (database& db, const object_type& x, callback_event e)
  {
    ODB_POTENTIALLY_UNUSED (db);
    ODB_POTENTIALLY_UNUSED (x);
    ODB_POTENTIALLY_UNUSED (e);
  }
}

namespace odb
{
  // timing_phase
  //

  inline
  bool access::composite_value_traits< ::polaris::io::timing_phase, id_sqlite >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.phase_null;
    r = r && i.barrier_null;
    r = r && i.ring_null;
    r = r && i.position_null;
    r = r && i.minimum_null;
    r = r && i.maximum_null;
    r = r && i.extend_null;
    r = r && i.yellow_null;
    r = r && i.red_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::polaris::io::timing_phase, id_sqlite >::
  set_null (image_type& i, sqlite::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace sqlite;

    i.phase_null = true;
    i.barrier_null = true;
    i.ring_null = true;
    i.position_null = true;
    i.minimum_null = true;
    i.maximum_null = true;
    i.extend_null = true;
    i.yellow_null = true;
    i.red_null = true;
  }

  // shape_geometry
  //

  inline
  bool access::composite_value_traits< ::polaris::io::shape_geometry, id_sqlite >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.x_null;
    r = r && i.y_null;
    r = r && i.z_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::polaris::io::shape_geometry, id_sqlite >::
  set_null (image_type& i, sqlite::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace sqlite;

    i.x_null = true;
    i.y_null = true;
    i.z_null = true;
  }

  // signal_time
  //

  inline
  bool access::composite_value_traits< ::polaris::io::signal_time, id_sqlite >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.start_null;
    r = r && i.end_null;
    r = r && i.timing_null;
    r = r && i.phasing_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::polaris::io::signal_time, id_sqlite >::
  set_null (image_type& i, sqlite::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace sqlite;

    i.start_null = true;
    i.end_null = true;
    i.timing_null = true;
    i.phasing_null = true;
  }

  // phase_movement
  //

  inline
  bool access::composite_value_traits< ::polaris::io::phase_movement, id_sqlite >::
  get_null (const image_type& i)
  {
    bool r (true);
    r = r && i.movement_null;
    r = r && i.link_null;
    r = r && i.dir_null;
    r = r && i.to_link_null;
    r = r && i.protect_null;
    return r;
  }

  inline
  void access::composite_value_traits< ::polaris::io::phase_movement, id_sqlite >::
  set_null (image_type& i, sqlite::statement_kind sk)
  {
    ODB_POTENTIALLY_UNUSED (sk);

    using namespace sqlite;

    i.movement_null = true;
    i.link_null = true;
    i.dir_null = true;
    i.to_link_null = true;
    i.protect_null = true;
  }

  // MetaData
  //

  inline
  void access::object_traits_impl< ::polaris::io::MetaData, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::MetaData, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Node
  //

  inline
  void access::object_traits_impl< ::polaris::io::Node, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Node, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Zone
  //

  inline
  void access::object_traits_impl< ::polaris::io::Zone, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Zone, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Shape
  //

  inline
  void access::object_traits_impl< ::polaris::io::Shape, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  // Link
  //

  inline
  void access::object_traits_impl< ::polaris::io::Link, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Link, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Pocket
  //

  inline
  void access::object_traits_impl< ::polaris::io::Pocket, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Pocket, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Lane_Use
  //

  inline
  void access::object_traits_impl< ::polaris::io::Lane_Use, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Lane_Use, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Connect
  //

  inline
  void access::object_traits_impl< ::polaris::io::Connect, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Connect, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Turn_Pen
  //

  inline
  void access::object_traits_impl< ::polaris::io::Turn_Pen, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Turn_Pen, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Parking
  //

  inline
  void access::object_traits_impl< ::polaris::io::Parking, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Parking, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Location
  //

  inline
  void access::object_traits_impl< ::polaris::io::Location, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Location, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Access
  //

  inline
  void access::object_traits_impl< ::polaris::io::Access, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Access, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Sign
  //

  inline
  void access::object_traits_impl< ::polaris::io::Sign, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Sign, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Signal
  //

  inline
  void access::object_traits_impl< ::polaris::io::Signal, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  // Timing
  //

  inline
  void access::object_traits_impl< ::polaris::io::Timing, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  // Phasing
  //

  inline
  void access::object_traits_impl< ::polaris::io::Phasing, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  // Detector
  //

  inline
  void access::object_traits_impl< ::polaris::io::Detector, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Detector, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Stop
  //

  inline
  void access::object_traits_impl< ::polaris::io::Stop, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Stop, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Fare
  //

  inline
  void access::object_traits_impl< ::polaris::io::Fare, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Fare, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Line
  //

  inline
  void access::object_traits_impl< ::polaris::io::Line, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Line, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Schedule
  //

  inline
  void access::object_traits_impl< ::polaris::io::Schedule, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Schedule, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Driver
  //

  inline
  void access::object_traits_impl< ::polaris::io::Driver, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Driver, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Route_Nodes
  //

  inline
  void access::object_traits_impl< ::polaris::io::Route_Nodes, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Route_Nodes, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Veh_Type
  //

  inline
  void access::object_traits_impl< ::polaris::io::Veh_Type, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Veh_Type, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Ridership
  //

  inline
  void access::object_traits_impl< ::polaris::io::Ridership, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Ridership, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Area_Type
  //

  inline
  void access::object_traits_impl< ::polaris::io::Area_Type, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Area_Type, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Link_Type
  //

  inline
  void access::object_traits_impl< ::polaris::io::Link_Type, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Link_Type, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Component
  //

  inline
  void access::object_traits_impl< ::polaris::io::Component, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Component, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Component_Property_Keys
  //

  inline
  void access::object_traits_impl< ::polaris::io::Component_Property_Keys, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Component_Property_Keys, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Instance
  //

  inline
  void access::object_traits_impl< ::polaris::io::Instance, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Instance, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Instance_Property_Values
  //

  inline
  void access::object_traits_impl< ::polaris::io::Instance_Property_Values, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Instance_Property_Values, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Action
  //

  inline
  void access::object_traits_impl< ::polaris::io::Action, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Action, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }

  // Action_Keys
  //

  inline
  void access::object_traits_impl< ::polaris::io::Action_Keys, id_sqlite >::
  erase (database& db, const object_type& obj)
  {
    callback (db, obj, callback_event::pre_erase);
    erase (db, id (obj));
    callback (db, obj, callback_event::post_erase);
  }

  inline
  void access::object_traits_impl< ::polaris::io::Action_Keys, id_sqlite >::
  load_ (statements_type&, object_type&)
  {
  }
}

